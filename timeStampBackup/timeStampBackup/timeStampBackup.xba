<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="timeStampBackup" script:language="StarBasic">

&apos;  *****  BASIC  *****

&apos;************************************************
&apos;Copyright (C) 2016 - 2020 Flow-Cont Kft., Hungary --- Tibor Kovács  (GPL v3)

&apos;This program is free software: you can redistribute it and/or modify
&apos;it under the terms of the GNU General Public License as published by
&apos;the Free Software Foundation, either version 3 of the License, or
&apos;(at your option) any later version.

&apos;This program is distributed in the hope that it will be useful,
&apos;but WITHOUT ANY WARRANTY; without even the implied warranty of
&apos;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
&apos;GNU General Public License for more details.

&apos;You should have received a copy of the GNU General Public License
&apos;along with this program.  If not, see http://www.gnu.org/licenses/
&apos;************************************************

Option Explicit

&apos;Localization

Function GetPickerTitle(sLocal as string) as string
 Dim sResult as string
	Select Case sLocal
		Case &quot;en-EN&quot;: sResult = &quot;Manage Backup files&quot;
		Case &quot;hu-HU&quot;: sResult = &quot;Biztonségi mentések kezelése&quot;
		Case &quot;de-DE&quot;: sResult = &quot;Backup-Dateien verwalten&quot;
		Case &quot;it-IT&quot;: sResult = &quot;Gestisci i file di backup&quot;
		Case &quot;es-ES&quot;: sResult = &quot;Administrar archivos de copia de seguridad&quot;
		Case &quot;ru-RU&quot;: sResult = &quot;Управление резервными файлами&quot;
		Case &quot;fr-FR&quot;: sResult = &quot;Gérer les fichiers de sauvegarde&quot;
		Case &quot;pl&quot;,&quot;PL&quot;: sResult = &quot;Zarządzaj plikami Backup&quot;
		Case else: sResult = &quot;Manage Backup files&quot;
	End Select
GetPickerTitle = sResult
End function


Function GetDelButtonLabel(sLocal as string) as string
 Dim sResult as string
	Select Case sLocal
		Case &quot;en-EN&quot;: sResult = &quot;Delete&quot;
		Case &quot;hu-HU&quot;: sResult = &quot;Törlés&quot;
		Case &quot;de-DE&quot;: sResult = &quot;Löschen&quot;
		Case &quot;it-IT&quot;: sResult = &quot;Elimina&quot;
		Case &quot;es-ES&quot;: sResult = &quot;Borrar&quot;
		Case &quot;ru-RU&quot;: sResult = &quot;Удалить&quot;
		Case &quot;fr-FR&quot;: sResult = &quot;Supprimer&quot; &apos;Hagar Delest
		Case &quot;pl&quot;,&quot;PL&quot;: sResult = &quot;Usuń&quot;
		Case else: sResult = &quot;Delete&quot;
	End Select
GetDelButtonLabel = sResult
End function


Function GetLoadButtonLabel(sLocal as string) as string
 Dim sResult as string
	Select Case sLocal
		Case &quot;en-EN&quot;: sResult = &quot;Open&quot;
		Case &quot;hu-HU&quot;: sResult = &quot;Megnyitás&quot;
		Case &quot;de-DE&quot;: sResult = &quot;Öffnen&quot;
		Case &quot;it-IT&quot;: sResult = &quot;Aperto&quot;
		Case &quot;es-ES&quot;: sResult = &quot;Abierto&quot;
		Case &quot;ru-RU&quot;: sResult = &quot;Открыть&quot;
		Case &quot;fr-FR&quot;: sResult = &quot;Ouvrir&quot;
		Case &quot;pl&quot;,&quot;PL&quot;: sResult = &quot;Otwórz&quot;
		Case else: sResult = &quot;Open&quot;
	End Select
GetLoadButtonLabel = sResult
End function


Function GetFilterItem(sLocal as string, iFilterItem as integer) as string
 Dim sResult as string
	Select Case sLocal
		Case &quot;en-EN&quot;, &quot;en-GB&quot;, &quot;en-US&quot;
			Select Case iFilterItem
				Case 0: sResult = &quot;All of Backup files&quot;
				Case 1: sResult = &quot;Today&apos;s Backups of all documents&quot;
				Case 2: sResult = &quot;Yesterday&apos;s Backups of all documents&quot;
				Case 3: sResult = &quot;All Backups of this document&quot;
				Case 4: sResult = &quot;Current calendar month&apos;s Backups of this document&quot; &apos;RoryOF
				Case 5: sResult = &quot;Previous calendar month&apos;s Backups of this document&quot; &apos;RoryOF
				Case 6: sResult = &quot;Today&apos;s Backups of this document&quot;
				Case 7: sResult = &quot;Yesterday&apos;s Backups of this document&quot;
			end Select
		Case &quot;hu-HU&quot;
			Select Case iFilterItem
				Case 0: sResult = &quot;Az összes mentett fájl&quot;
				Case 1: sResult = &quot;A mai összes mentett fájl&quot;
				Case 2: sResult = &quot;A tegnapi összes mentett fájl&quot;
				Case 3: sResult = &quot;Ennek a fájlnak a mentései&quot;
				Case 4: sResult = &quot;Ennek a fájlnak az e havi mentései&quot;
				Case 5: sResult = &quot;Ennek a fájlnak az előző havi mentései&quot;
				Case 6: sResult = &quot;Ennek a fájlnak a mai mentései&quot;
				Case 7: sResult = &quot;Ennek a fájlnak a tegnapi mentései&quot;
			end Select
		Case &quot;de-DE&quot;, &quot;de-CH&quot;, &quot;de-AT&quot;
			Select Case iFilterItem
				Case 0: sResult = &quot;Alle Sicherungsdateien&quot;
				Case 1: sResult = &quot;Die heutigen Backups aller Dokumente&quot; &apos;GerhardW
				Case 2: sResult = &quot;Die gestrigen Backups aller Dokumente&quot; &apos;GerhardW
				Case 3: sResult = &quot;Alle Backups dieses Dokuments&quot;
				Case 4: sResult = &quot;Aktuelle Monats-Backups dieses Dokuments&quot;
				Case 5: sResult = &quot;Backups dieses Dokuments vom Vormonat&quot;
				Case 6: sResult = &quot;Die heutigen Backups dieses Dokuments&quot;
				Case 7: sResult = &quot;Die gestrigen Backups dieses Dokuments&quot;
			end Select
		Case &quot;it-IT&quot;
			Select Case iFilterItem
				Case 0: sResult = &quot;Tutti i file di backup&quot;
				Case 1: sResult = &quot;I backup di oggi di tutti i documenti&quot;
				Case 2: sResult = &quot;I backup di ieri di tutti i documenti&quot;
				Case 3: sResult = &quot;Tutti i backup di questo documento&quot;
				Case 4: sResult = &quot;Backup del mese effettivo di questo documento&quot;
				Case 5: sResult = &quot;Backup del mese precedente di questo documento&quot;
				Case 6: sResult = &quot;I backup di oggi di questo documento&quot;
				Case 7: sResult = &quot;I backup di ieri di questo documento&quot;
			end Select
		Case &quot;es-ES&quot;
			Select Case iFilterItem
				Case 0: sResult = &quot;Todos los archivos de respaldo&quot;
				Case 1: sResult = &quot;Copias de seguridad de todos los documentos de hoy&quot;
				Case 2: sResult = &quot;Copias de seguridad de todos los documentos de ayer&quot;
				Case 3: sResult = &quot;Todas las copias de seguridad de este documento&quot;
				Case 4: sResult = &quot;Copias de seguridad del mes real de este documento&quot;
				Case 5: sResult = &quot;Copias de seguridad de este documento del mes anterior&quot;
				Case 6: sResult = &quot;Copias de seguridad de hoy de este documento&quot;
				Case 4: sResult = &quot;Copias de seguridad de ayer de este documento&quot;
			end Select
		Case &quot;ru-RU&quot;
			Select Case iFilterItem
				Case 0: sResult = &quot;Все файлы резервных копий&quot;
				Case 1: sResult = &quot;Сегодняшние резервные копии всех документов&quot;
				Case 2: sResult = &quot;Вчерашние резервные копии всех документов&quot;
				Case 3: sResult = &quot;Все резервные копии этого документа&quot;
				Case 4: sResult = &quot;Фактические резервные копии этого документа за месяц&quot;
				Case 5: sResult = &quot;Резервные копии этого документа за предыдущий месяц&quot;
				Case 6: sResult = &quot;Сегодняшние резервные копии этого документа&quot;
				Case 7: sResult = &quot;Вчерашние резервные копии этого документа&quot;
			end Select
		Case &quot;fr-FR&quot;
			Select Case iFilterItem
				Case 0: sResult = &quot;Tous les fichiers de sauvegarde&quot;
				Case 1: sResult = &quot;Sauvegardes d&apos;aujourd&apos;hui de tous les documents&quot;
				Case 2: sResult = &quot;Sauvegardes d&apos;hier de tous les documents&quot;
				Case 3: sResult = &quot;Toutes les sauvegardes de ce document&quot;
				Case 4: sResult = &quot;Sauvegardes du mois en cours de ce document&quot; &apos;Hagar Delest
				Case 5: sResult = &quot;Sauvegardes du mois précédent de ce document&quot;
				Case 6: sResult = &quot;Sauvegardes d&apos;aujourd&apos;hui de ce document&quot;
				Case 7: sResult = &quot;Sauvegardes d&apos;hier de ce document&quot;
			end Select		
		Case &quot;pl&quot;,&quot;PL&quot;
			Select Case iFilterItem
				Case 0: sResult = &quot;Wszystkie pliki Backup&quot;
				Case 1: sResult = &quot;Dzisiejsze pliki Backup&quot;
				Case 2: sResult = &quot;Wczorajsze pliki Backup&quot;
				Case 3: sResult = &quot;Pliki Backup tego dokumentu&quot;
				Case 4: sResult = &quot;Pliki Backup tego dokumentu z bieżącego miesiąca&quot; 
				Case 5: sResult = &quot;Pliki Backup tego dokumentu z poprzedniego miesiąca&quot; 
				Case 6: sResult = &quot;Dzisiejsze pliki Backup tego dokumentu&quot;
				Case 7: sResult = &quot;Wczorajsze pliki Backup tego dokumentu&quot;
			end Select				
		Case else
			Select Case iFilterItem
				Case 0: sResult = &quot;All of Backup files&quot;
				Case 1: sResult = &quot;Today&apos;s Backups of all documents&quot;
				Case 2: sResult = &quot;Yesterday&apos;s Backups of all documents&quot;
				Case 3: sResult = &quot;All Backups of this document&quot;
				Case 4: sResult = &quot;Current calendar month&apos;s Backups of this document&quot; &apos;RoryOF
				Case 5: sResult = &quot;Previous calendar month&apos;s Backups of this document&quot; &apos;RoryOF
				Case 6: sResult = &quot;Today&apos;s Backups of this document&quot;
				Case 7: sResult = &quot;Yesterday&apos;s Backups of this document&quot;
			end Select
	End Select
GetFilterItem = sResult
End function


Function GetMsgBoxTitle(sLocal as string) as string
 Dim sResult as string
	Select Case sLocal
		Case &quot;en-EN&quot;: sResult = &quot;Confirmation request:&quot;
		Case &quot;hu-HU&quot;: sResult = &quot;Megerősítés kérése:&quot;
		Case &quot;de-DE&quot;: sResult = &quot;Bestätigungsanfrage:&quot;
		Case &quot;it-IT&quot;: sResult = &quot;Richiesta di conferma:&quot;
		Case &quot;es-ES&quot;: sResult = &quot;Solicitud de confirmación&quot;
		Case &quot;ru-RU&quot;: sResult = &quot;Запрос подтверждения:&quot;
		Case &quot;fr-FR&quot;: sResult = &quot;Demande de confirmation:&quot;
		Case &quot;pl&quot;,&quot;PL&quot;: sResult = &quot;Żądanie potwierdzenia:&quot;
		Case else: sResult = &quot;Confirmation request:&quot;
	End Select
GetMsgBoxTitle = sResult
End function


Function GetMessage(sLocal as string) as string
 Dim sResult as string
	Select Case sLocal
		Case &quot;en-EN&quot;: sResult = &quot;Are you sure you want to delete the following file?&quot;
		Case &quot;hu-HU&quot;: sResult = &quot;Biztosan törölni kívánja az alábbi fájlt?&quot;
		Case &quot;de-DE&quot;: sResult = &quot;Möchten Sie die folgende Datei wirklich löschen?&quot;
		Case &quot;it-IT&quot;: sResult = &quot;Sei sicuro di voler eliminare il seguente file?&quot;
		Case &quot;es-ES&quot;: sResult = &quot;¿Seguro que quieres borrar el siguiente archivo?&quot;
		Case &quot;ru-RU&quot;: sResult = &quot;Вы действительно хотите удалить следующий файл?&quot;
		Case &quot;fr-FR&quot;: sResult = &quot;Êtes-vous sûr de vouloir supprimer le fichier suivant?&quot;
		Case &quot;pl&quot;,&quot;PL&quot;: sResult = &quot;Czy na pewno chcesz usunąć tę kopię zapasową? : &quot;
		Case else: sResult = &quot;Are you sure you want to delete the following file?&quot;
	End Select
GetMessage = sResult
End function
&apos;_____________________________________________________________________________


&apos;Helper functions and subs

Function GetLocaleString() as string

 Dim oInstance as Variant 
 Dim oConfigProvider as Variant
 Dim sProvider as String
 Dim sAccess as String

	sProvider = &quot;com.sun.star.configuration.ConfigurationProvider&quot;
	sAccess   = &quot;com.sun.star.configuration.ConfigurationAccess&quot;

	oConfigProvider = createUnoService(sProvider)

 Dim oProp(0) As New com.sun.star.beans.PropertyValue
	oProp(0).Name = &quot;nodepath&quot;
	oProp(0).Value = &quot;/org.openoffice.Setup/L10N&quot;

	oInstance = oConfigProvider.createInstanceWithArguments(sAccess, oProp())

GetLocaleString() = oInstance.getbyname(&quot;ooLocale&quot;)
End Function


Sub LoadToolsLib

	If (Not GlobalScope.BasicLibraries.isLibraryLoaded(&quot;Tools&quot;)) Then
		GlobalScope.BasicLibraries.LoadLibrary(&quot;Tools&quot;)
	End If
End sub


Function get_OfficeName() as string

 Dim oProdNameAccess As Object

	LoadToolsLib
	oProdNameAccess = GetRegistryKeyContent(&quot;org.openoffice.Setup/Product&quot;)

get_OfficeName = oProdNameAccess.getByName(&quot;ooName&quot;)
End function
&apos;___________________________________________________________________________________


&apos;Calling the manage Sub

Sub DeleteBackupFile
	ManageBackupFiles(&quot;Delete&quot;)
end sub

Sub LoadBackupFile
	ManageBackupFiles(&quot;Open&quot;)
end sub
&apos;_____________________________________________________________________________


&apos;The main subs

Sub ManageBackupFiles(sAction as string)
 Dim oPicker as object
 Dim oDoc as object

 Dim FPtype(0) As Integer
 Dim iToDo as integer
 Dim i as integer
 Dim ile as integer

 Dim bFileHasURL as boolean

 Dim Dummy()
 Dim sSelectedFiles as variant

 Dim sTheURL as string
 Dim sTheFullPath as string
 Dim sTheFileName as string
 Dim sFileExt as string
 Dim sTitle as string
 Dim sMessage as string
 Dim sInitDir as string
 Dim sPattern as string
 Dim sFilterLabel as string
 Dim sDocURL as string
 Dim sDateStamp as string
 Dim sLocale as string
 Dim sOfficeName

  	sOfficeName = Get_OfficeName()
  	sLocale = GetLocaleString()
  	LoadToolsLib

	oDoc = ThisComponent
	If not oDoc.hasLocation() then
		bFileHasURL = false
	else
		bFileHasURL = true
		sDocURL = oDoc.URL
		sTheFileName = GetFileNameWithoutExtension(FileNameoutofPath(sDocURL))
		sFileExt = GetFileNameExtension(sDocURL)
	end if
	sInitDir = CreateUnoService(&quot;com.sun.star.util.PathSettings&quot;).Backup
	
	&apos;oPicker = CreateUnoService(&quot;com.sun.star.ui.dialogs.FilePicker&quot;)
	oPicker = CreateUnoService(&quot;com.sun.star.ui.dialogs.OfficeFilePicker&quot;)
	oPicker.setTitle(GetPickerTitle(sLocale))
	
	sFilterLabel = GetFilterItem(sLocale, 0)
	sPattern = &quot;*.*&quot;
	oPicker.appendFilter(sFilterLabel, sPattern)

	sFilterLabel = GetFilterItem(sLocale, 1)
	sDateStamp= &quot;_&quot; &amp; Format(Year(Now), &quot;0000&quot;) &amp; Format(Month(Now), &quot;00&quot;) &amp; Format(Day(Now), &quot;00&quot;) &amp; &quot;_&quot;
	sPattern = &quot;*&quot; + sDateStamp + &quot;*.*&quot;
	oPicker.appendFilter(sFilterLabel, sPattern)

	sFilterLabel = GetFilterItem(sLocale, 2)
	sDateStamp= &quot;_&quot; &amp; Format(Year(Now), &quot;0000&quot;) &amp; Format(Month(Now), &quot;00&quot;) &amp; Format(Day(Now)-1, &quot;00&quot;) &amp; &quot;_&quot;
	sPattern = &quot;*&quot; + sDateStamp + &quot;*.*&quot;
	oPicker.appendFilter(sFilterLabel, sPattern)
	
	If bFileHasURL then
	
		sFilterLabel = GetFilterItem(sLocale, 3)
		sPattern = sTheFileName + &quot;*.&quot; + sFileExt
		oPicker.appendFilter(sFilterLabel, sPattern)
	
		sFilterLabel = GetFilterItem(sLocale, 4)
		sDateStamp= &quot;_&quot; &amp; Format(Year(Now), &quot;0000&quot;) &amp; Format(Month(Now), &quot;00&quot;)
		sPattern = sTheFileName + sDateStamp + &quot;*.&quot; + sFileExt
		oPicker.appendFilter(sFilterLabel, sPattern)

		sFilterLabel = GetFilterItem(sLocale, 5)
		sDateStamp= &quot;_&quot; &amp; Format(Year(Now), &quot;0000&quot;) &amp; Format(Month(Now)-1, &quot;00&quot;)
		sPattern = sTheFileName + sDateStamp + &quot;*.&quot; + sFileExt
		oPicker.appendFilter(sFilterLabel, sPattern)

		sFilterLabel = GetFilterItem(sLocale, 6)
		sDateStamp= &quot;_&quot; &amp; Format(Year(Now), &quot;0000&quot;) &amp; Format(Month(Now), &quot;00&quot;) &amp; Format(Day(Now), &quot;00&quot;) &amp; &quot;_&quot;
		sPattern = sTheFileName + sDateStamp + &quot;*.&quot; + sFileExt
		oPicker.appendFilter(sFilterLabel, sPattern)

		sFilterLabel = GetFilterItem(sLocale, 7)
		sDateStamp= &quot;_&quot; &amp; Format(Year(Now), &quot;0000&quot;) &amp; Format(Month(Now), &quot;00&quot;) &amp; Format(Day(Now)-1, &quot;00&quot;) &amp; &quot;_&quot;
		sPattern = sTheFileName + sDateStamp + &quot;*.&quot; + sFileExt
		oPicker.appendFilter(sFilterLabel, sPattern)
	end if

	if not ismissing(sInitDir) then oPicker.setDisplayDirectory(sInitDir)
	FPtype(0)=com.sun.star.ui.dialogs.TemplateDescription.FILEOPEN_SIMPLE
	oPicker.initialize(FPtype())

	Select Case sAction
		Case &quot;Delete&quot;
			If sOfficeName = &quot;LibreOffice&quot; then
				oPicker.setMultiSelectionMode(true)
			Else 
				oPicker.setMultiSelectionMode(false)
			end if
			oPicker.SetLabel(1, GetDelButtonLabel(sLocale))
		Case &quot;Open&quot;
			oPicker.setMultiSelectionMode(false)
			oPicker.SetLabel(1, GetLoadButtonLabel(sLocale))
		Case else
			Print &quot;Nothing to do...&quot;
			Exit sub
	end Select

	If oPicker.execute = com.sun.star.ui.dialogs.ExecutableDialogResults.OK Then
		&apos;Xray oPicker
		Select case sOfficeName
			Case &quot;LibreOffice&quot;			
				ile = uBound(oPicker.SelectedFiles)
			Case &quot;OpenOffice&quot;		
				ile = 0
			Case else
				Print &quot;Nothing to do...&quot;
				exit sub
		End Select
		
		For i = 0 to ile
			if 	sOfficeName = &quot;LibreOffice&quot; then 
				sTheFullPath = oPicker.SelectedFiles(i)
			else
				sTheFullPath = oPicker.Files(0)
			endif
			sTheURL = ConvertToURL(sTheFullPath)		
			If FileExists(sTheURL) Then
				Select Case sAction
					Case &quot;Delete&quot;
						sTitle = GetMsgBoxTitle(sLocale)
						sMessage = GetMessage(sLocale)
						sMessage = sMessage &amp; chr(10) &amp; chr(10) &amp; ConvertFromURL(sTheURL)
						iToDo = MsgBox(sMessage, 36, sTitle)
						If iToDo = 6 then Kill(sTheURL)
					Case &quot;Open&quot;
						StarDesktop.loadComponentFromURL(sTheURL, &quot;_blank&quot;, 0, Dummy)
					Case else
						Print &quot;Nothing to do...&quot;
					End select
			End If
		Next i			
	EndIf
End Sub


Sub timeStampBackup

 Dim sDocURL as string
 Dim sBackupURL as string
 Dim sTimeStamp as string
 Dim sLocale as string
 Dim oDoc as object
 dim dispatcher as object, document as object
 
	LoadToolsLib
	
	&apos;Acquiring timestamp
	sTimeStamp = &quot;_&quot; &amp; Format(Year(Now), &quot;0000&quot;) &amp; Format(Month(Now), &quot;00&quot;) &amp; Format(Day(Now), &quot;00&quot;) &amp; &quot;_&quot; &amp; _
                       Format(Hour(Now), &quot;00&quot;) &amp; Format(Minute(Now), &quot;00&quot;) &amp; Format(Second(Now), &quot;00&quot;)
	oDoc = Thiscomponent

	&apos;internal save command
	document   = ThisComponent.CurrentController.Frame
	dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
	dispatcher.executeDispatch(document, &quot;.uno:Save&quot;, &quot;&quot;, 0, Array())

    If oDoc.hasLocation() then
    	&apos;In case the file save was unsuccessful
   		sDocURL = oDoc.getURL()
   		sBackupURL = CreateUnoService(&quot;com.sun.star.util.PathSettings&quot;).Backup &amp; &quot;/&quot; &amp; _
   		GetFileNameWithoutExtension(sDocURL, &quot;/&quot;) &amp; _
   		sTimeStamp() &amp; &quot;.&quot; &amp; _
   		GetFileNameExtension(sDocURL, &quot;/&quot;)
   		FileCopy oDoc.URL, sBackupURL
   	end if

End sub
&apos;_____________________________________________________________________________

</script:module>